// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/chat/messages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Save a new chat message to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Save a chat message",
                "parameters": [
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully saved message",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid message data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/token": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate a token for authenticating with Stream Chat API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get Stream Chat token",
                "responses": {
                    "200": {
                        "description": "Successfully generated token",
                        "schema": {
                            "$ref": "#/definitions/models.ChatToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ChatToken": {
            "description": "Chat authentication token response",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "models.Message": {
            "description": "Chat message model",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello, how are you?"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-12-01T10:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "roomId": {
                    "type": "string",
                    "example": "room123"
                },
                "userId": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439012"
                }
            }
        },
        "models.MessageRequest": {
            "description": "Request payload for creating a chat message",
            "type": "object",
            "required": [
                "content",
                "roomId"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello, how are you?"
                },
                "roomId": {
                    "type": "string",
                    "example": "room123"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5002",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "RealTimeChat Go API",
	Description:      "Go backend API for RealTimeChat application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
